<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ctg.pipeline.config.dao.TemplateDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.ctg.pipeline.config.entity.Template">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="type" property="type" />
        <result column="config" property="config" />
        <result column="icon" property="icon" />
        <result column="description" property="description" />
        <result column="sort" property="sort" />
        <result column="create_by" property="createBy" />
        <result column="create_time" property="createTime" />
        <result column="update_by" property="updateBy" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, name, type, config,icon, description, sort, create_by, create_time, update_by, update_time
    </sql>
    <sql id="Base_Column_List_With_Alias">
        t.id, t.name, t.type, t.config,icon, t.description, t.sort, t.create_by, t.create_time, t.update_by, t.update_time
    </sql>

    <insert id="insertTemplate" parameterType="com.ctg.pipeline.config.entity.Template" useGeneratedKeys="true" keyProperty="id">
        insert into p_ctg_template
            (id, name, type, config,icon, description, sort, create_by, create_time, update_by, update_time)
        values (#{id}, #{name}, #{type}, #{config},#{icon}, #{description}, #{sort},
                #{createBy},#{createTime}, #{updateBy}, #{updateTime})
    </insert>
    <select id="listByGroupName" resultType="com.ctg.pipeline.common.model.pipeline.config.StageTemplate">
        select <include refid="Base_Column_List_With_Alias" />
        , g.group_name
        from p_ctg_template t
        left join p_ctg_template_group AS g ON g.template_id = t.id
        where  g.group_name = #{groupName}
        <if test="name != null and name != ''">
            and t.name like concat('%', #{name}, '%')
        </if>
        <choose>
            <when test="sort != null and sort != '' and sort=='ASC'">
                ORDER BY t.sort asc
            </when>
            <otherwise>
                ORDER BY t.sort desc
            </otherwise>
        </choose>
    </select>
    <select id="selectStageTemplateById"  resultType="com.ctg.pipeline.common.model.pipeline.config.StageTemplate">
        select <include refid="Base_Column_List_With_Alias" />
        , g.group_name
        from p_ctg_template t
        left join p_ctg_template_group AS g ON g.template_id = t.id
        where  t.id = #{id}
    </select>

</mapper>
